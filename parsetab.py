
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd3a\r\xbc\xff\xd9\xac\xc3 l/\xdf\xfeL{j'
    
_lr_action_items = {'PEEK':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[245,245,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'TRANS':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[9,9,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,9,-18,-16,-81,-20,9,-19,-21,-13,-8,-12,-15,-9,-11,]),'STAR':([5,11,20,22,62,82,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,177,187,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,228,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,33,-62,-61,-60,130,-140,-139,-116,-108,-105,-138,-107,-111,-143,148,-141,-110,148,148,148,-106,-134,-131,148,-142,243,130,148,-112,-135,148,148,-117,148,148,148,148,148,148,148,148,-118,148,148,33,148,-136,-114,-137,-109,148,-138,148,148,148,-113,-103,-115,148,-104,148,]),'SLASH':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,158,-141,-110,158,158,158,-106,-134,-131,158,-142,158,-112,-135,158,158,-117,158,158,158,158,158,158,158,158,-118,158,158,158,-136,-114,-137,-109,158,-138,158,158,158,-113,-103,-115,158,-104,158,]),'FLOATNUMBER':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-99,-82,84,84,84,84,-81,84,-88,84,-98,84,-95,-89,-94,-100,84,-97,-90,-92,-101,-102,-93,-91,-96,]),'VOID':([0,1,2,5,8,15,46,56,63,74,123,150,162,174,180,221,230,231,234,236,238,239,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[3,3,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,3,-10,-33,-17,3,-26,3,-27,-28,-14,-82,-41,-36,-38,-40,-35,-37,3,-18,-16,-81,-20,3,-19,-21,-13,-8,-12,-15,-9,-11,]),'GLOBAL':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[4,4,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,4,-18,-16,-81,-20,4,-19,-21,-13,-8,-12,-15,-9,-11,]),'NUMBER':([54,89,90,92,99,104,106,125,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,190,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[85,85,85,85,85,85,85,184,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,262,85,85,-99,-82,85,85,85,85,-81,85,-88,85,-98,85,-95,-89,-94,-100,85,-97,-90,-92,-101,-102,-93,-91,-96,]),',':([5,20,22,32,44,45,46,47,49,55,58,60,61,62,64,65,66,70,76,78,79,82,84,85,88,94,95,97,98,100,101,103,118,119,123,128,129,132,134,137,138,142,144,161,164,165,167,173,182,183,184,191,193,196,199,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,240,261,262,263,266,268,271,273,277,284,286,290,309,312,327,330,332,333,336,337,339,340,344,361,364,367,368,],[-70,-62,-61,51,51,68,-65,69,51,51,51,51,51,-60,51,51,116,122,-80,126,127,131,-140,-139,-116,-108,-105,-138,-107,-111,-143,-141,175,177,-64,51,-51,51,-110,-133,-132,-106,-134,-131,51,51,-142,233,-78,-77,-79,-52,131,-143,267,-112,270,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,51,-56,-54,-55,-136,-114,-137,-109,51,51,321,51,-53,338,348,350,352,353,356,-113,-103,-115,51,51,373,376,-104,]),'GT':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,156,-141,-110,156,156,156,-106,-134,-131,156,-142,156,-112,-135,156,-130,-117,156,156,-123,-124,-120,-121,-122,-119,-118,-129,156,156,-136,-114,-137,-109,156,-138,156,156,156,-113,-103,-115,156,-104,156,]),'NEW':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-99,-82,87,87,87,87,-81,87,-88,87,-98,87,-95,-89,-94,-100,87,-97,-90,-92,-101,-102,-93,-91,-96,]),'RIGHTSHIFT':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,159,-141,-110,159,159,159,-106,-134,-131,159,-142,159,-112,-135,159,-130,-117,159,159,159,159,-120,159,159,-119,-118,-129,159,159,-136,-114,-137,-109,159,-138,159,159,159,-113,-103,-115,159,-104,159,]),'CHECK_NEXT_CYCLE':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[248,248,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'DOT':([5,20,22,62,84,85,88,94,95,97,98,100,101,103,134,142,167,201,203,266,268,271,273,312,337,339,340,368,],[-70,-62,-61,-60,-140,-139,136,-108,-105,-138,-107,-111,-143,-141,-110,-106,-142,-112,-135,-136,-114,-137,-109,-138,-113,-103,-115,-104,]),'CHECK_PROBE':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[249,249,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'LEFTSHIFT':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,147,-141,-110,147,147,147,-106,-134,-131,147,-142,147,-112,-135,147,-130,-117,147,147,147,147,-120,147,147,-119,-118,-129,147,147,-136,-114,-137,-109,147,-138,147,147,147,-113,-103,-115,147,-104,147,]),'INCR':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-99,-82,90,90,90,90,-81,90,-88,90,-98,90,-95,-89,-94,-100,90,-97,-90,-92,-101,-102,-93,-91,-96,]),'LE':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,152,-141,-110,152,152,152,-106,-134,-131,152,-142,152,-112,-135,152,-130,-117,152,152,-123,-124,-120,-121,-122,-119,-118,-129,152,152,-136,-114,-137,-109,152,-138,152,152,152,-113,-103,-115,152,-104,152,]),'SEMI':([5,20,22,32,34,40,50,52,55,62,70,76,77,78,84,85,88,94,95,97,98,100,101,102,103,105,128,132,134,137,138,142,144,161,163,164,165,167,170,182,183,184,185,189,195,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,256,266,268,271,273,277,284,298,315,325,329,335,337,339,340,344,351,359,368,371,374,387,],[-70,-62,-61,-2,56,63,74,-74,-2,-60,120,-80,-73,-76,-140,-139,-116,-108,-105,-138,-107,-111,-143,150,-141,162,-2,-2,-110,-133,-132,-106,-134,-131,221,-2,-2,-142,230,-78,-77,-79,-75,260,265,-112,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,275,276,306,-136,-114,-137,-109,-2,-2,328,341,346,349,355,-113,-103,-115,-2,363,369,-104,378,381,389,]),'STATIC_CAST':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-99,-82,91,91,91,91,-81,91,-88,91,-98,91,-95,-89,-94,-100,91,-97,-90,-92,-101,-102,-93,-91,-96,]),')':([5,20,22,44,46,49,52,53,57,58,60,61,62,64,65,67,73,76,77,78,79,80,81,82,83,84,85,88,94,95,97,98,100,101,103,107,108,109,111,113,114,115,119,123,127,129,131,134,137,138,140,142,144,145,161,167,182,183,184,185,186,188,191,192,193,194,196,197,198,199,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,240,242,243,244,261,262,263,266,267,268,269,271,272,273,290,293,299,309,310,311,312,313,314,324,331,334,337,339,340,357,361,362,364,365,368,370,380,384,],[-70,-62,-61,-2,-65,-2,-74,-2,-2,-2,112,-2,-60,-2,-2,117,124,-80,-73,-76,-49,128,-50,-58,132,-140,-139,-116,-108,-105,-138,-107,-111,-143,-141,164,165,166,168,170,171,172,176,-64,-2,-51,-2,-110,-133,-132,203,-106,-134,-2,-131,-142,-78,-77,-79,-75,-48,-50,-52,-57,-58,-59,-143,266,-87,-86,-112,-135,271,273,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,-2,-71,-72,295,-56,-54,-55,-136,-2,-114,-2,-137,-2,-109,-2,325,329,-53,-85,337,-138,339,340,345,351,354,-113,-103,-115,368,-2,371,372,374,-104,377,386,387,]),'(':([4,5,6,9,10,17,18,19,23,24,26,32,35,54,86,89,90,91,92,93,99,101,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,201,205,245,247,248,249,250,251,252,253,254,255,257,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[28,-70,29,30,31,36,37,38,41,42,43,53,57,92,133,92,92,139,92,141,92,145,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,269,272,296,92,299,300,301,302,92,-99,304,305,308,-82,92,92,92,92,-81,92,-88,92,-98,92,-95,-89,-94,-100,92,-97,-90,-92,-101,-102,-93,-91,-96,]),'IS_INVALID':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-99,-82,93,93,93,93,-81,93,-88,93,-98,93,-95,-89,-94,-100,93,-97,-90,-92,-101,-102,-93,-91,-96,]),'NE':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,149,-141,-110,149,149,149,-106,-134,-131,149,-142,149,-112,-135,149,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,149,149,-136,-114,-137,-109,149,-138,149,149,149,-113,-103,-115,149,-104,149,]),'OUT_PORT':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[6,6,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,6,-18,-16,-81,-20,6,-19,-21,-13,-8,-12,-15,-9,-11,]),'ENQUEUE':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[251,251,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'LT':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,155,-141,-110,155,155,155,-106,-134,-131,155,-142,155,-112,-135,155,-130,-117,155,155,-123,-124,-120,-121,-122,-119,-118,-129,155,155,-136,-114,-137,-109,155,-138,155,155,155,-113,-103,-115,155,-104,155,]),'DOUBLE_COLON':([5,20,22,62,96,101,],[-70,39,-61,-60,143,-61,]),'PLUS':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,157,-141,-110,157,157,157,-106,-134,-131,157,-142,157,-112,-135,157,157,-117,157,157,157,157,-120,157,157,-119,-118,157,157,157,-136,-114,-137,-109,157,-138,157,157,157,-113,-103,-115,157,-104,157,]),'DECR':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-99,-82,89,89,89,89,-81,89,-88,89,-98,89,-95,-89,-94,-100,89,-97,-90,-92,-101,-102,-93,-91,-96,]),'ACTION':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[10,10,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,10,-18,-16,-81,-20,10,-19,-21,-13,-8,-12,-15,-9,-11,]),':':([5,59,101,112,168,],[-70,110,110,169,225,]),'=':([5,75,],[-70,125,]),'ASSIGN':([5,20,22,32,55,62,84,85,88,94,95,97,98,100,101,103,129,134,137,138,142,144,161,167,191,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,284,337,339,340,368,],[-70,-62,-61,54,106,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,-141,190,-110,-133,-132,-106,-134,-131,-142,264,-112,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,307,-136,-114,-137,-109,54,-113,-103,-115,-104,]),'$end':([0,1,2,5,7,8,12,13,15,25,27,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,291,294,297,316,320,322,326,343,346,347,358,360,],[-2,-2,-29,-70,0,-34,-5,-3,-39,-1,-4,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,-18,-16,-81,-20,-19,-21,-13,-8,-12,-15,-9,-11,]),'IDENT':([0,1,2,3,5,8,11,15,16,20,22,28,29,30,31,33,36,37,38,39,41,42,43,46,48,51,53,54,56,57,62,63,68,69,70,74,82,87,89,90,92,96,99,101,104,106,110,116,120,122,123,125,126,127,130,131,133,135,136,139,141,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,169,174,175,176,177,180,181,187,221,224,225,226,228,230,231,232,233,234,236,238,239,241,247,252,253,258,259,260,265,267,269,270,272,274,275,276,279,283,288,291,294,295,296,297,300,301,302,304,305,306,307,308,316,318,320,321,322,326,328,338,341,343,346,347,348,349,350,352,353,355,358,360,363,366,369,373,378,379,381,382,383,385,388,389,],[5,5,-29,-63,-70,-34,5,-39,5,-62,-61,5,5,5,5,5,5,5,5,5,5,5,5,-65,5,5,5,5,-6,5,-60,-7,5,5,5,-30,5,5,5,5,5,5,5,-61,5,5,5,5,5,5,-64,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-32,5,5,5,5,5,5,5,5,5,5,-31,5,5,5,5,5,-10,5,5,-33,5,5,5,5,-17,5,5,5,-26,5,-27,-28,5,5,5,-99,-82,-41,-36,-38,5,5,5,5,-40,-35,-37,5,5,5,-18,-16,5,5,-81,5,5,5,5,5,-88,5,5,-20,5,-19,5,-21,5,-98,5,-44,-8,-12,-15,5,-95,5,5,5,-89,-9,-11,-94,-100,-47,5,-97,-90,-92,-101,-102,-93,-91,-96,]),'PROTOCOL':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[14,14,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,14,-18,-16,-81,-20,14,-19,-21,-13,-8,-12,-15,-9,-11,]),'STRING':([14,21,51,54,89,90,92,99,104,106,125,126,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,190,247,252,253,258,264,267,269,270,272,297,305,306,307,328,338,349,355,356,363,366,373,376,378,379,381,382,383,385,388,389,],[34,40,76,97,97,97,97,97,97,97,183,76,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,261,97,97,-99,-82,309,97,97,312,97,-81,97,-88,97,-98,97,-95,-89,367,-94,-100,97,384,-97,-90,-92,-101,-102,-93,-91,-96,]),'STALL_AND_WAIT':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[254,254,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'OOD':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-99,-82,100,100,100,100,-81,100,-88,100,-98,100,-95,-89,-94,-100,100,-97,-90,-92,-101,-102,-93,-91,-96,]),'ENUM':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[17,17,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,17,-18,-16,-81,-20,17,-19,-21,-13,-8,-12,-15,-9,-11,]),'ELSE':([258,297,366,],[-82,-81,375,]),'MACHINE':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[18,18,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,18,-18,-16,-81,-20,18,-19,-21,-13,-8,-12,-15,-9,-11,]),'GE':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,153,-141,-110,153,153,153,-106,-134,-131,153,-142,153,-112,-135,153,-130,-117,153,153,-123,-124,-120,-121,-122,-119,-118,-129,153,153,-136,-114,-137,-109,153,-138,153,153,153,-113,-103,-115,153,-104,153,]),'EXTERN_TYPE':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[19,19,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,19,-18,-16,-81,-20,19,-19,-21,-13,-8,-12,-15,-9,-11,]),'[':([5,20,22,62,84,85,88,94,95,97,98,100,101,103,134,142,167,201,203,266,268,271,273,312,337,339,340,368,],[-70,-62,-61,-60,-140,-139,135,-108,-105,-138,-107,-111,-143,-141,-110,-106,-142,-112,-135,-136,-114,-137,-109,-138,-113,-103,-115,-104,]),'INCLUDE':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[21,21,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,21,-18,-16,-81,-20,21,-19,-21,-13,-8,-12,-15,-9,-11,]),']':([5,20,22,62,84,85,88,94,95,97,98,100,101,103,134,135,137,138,142,144,161,167,198,199,200,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,266,267,268,271,273,310,337,339,340,368,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,-141,-110,-2,-133,-132,-106,-134,-131,-142,-87,-86,268,-112,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,-136,-2,-114,-137,-109,-85,-113,-103,-115,-104,]),'IF':([181,252,253,258,297,306,328,349,355,363,366,375,378,379,381,382,383,385,388,389,],[255,255,-99,-82,-81,-88,-98,-95,-89,-94,-100,255,-97,-90,-92,-101,-102,-93,-91,-96,]),'AND':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,146,-141,-110,146,146,146,-106,-134,-131,146,-142,146,-112,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,146,146,-136,-114,-137,-109,146,-138,146,146,146,-113,-103,-115,146,-104,146,]),'DASH':([5,20,22,54,62,84,85,88,89,90,92,94,95,97,98,99,100,101,102,103,104,106,134,135,137,138,140,142,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,163,167,181,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,247,252,253,256,258,266,267,268,269,270,271,272,273,297,298,305,306,307,312,313,328,334,335,337,338,339,340,349,355,357,363,366,368,373,378,379,380,381,382,383,385,388,389,],[-70,-62,-61,99,-60,-140,-139,-116,99,99,99,-108,-105,-138,-107,99,-111,-143,154,-141,99,99,-110,99,154,154,154,-106,-134,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-131,154,-142,99,154,-112,-135,154,154,-117,154,154,154,154,-120,154,154,-119,-118,154,154,99,99,-99,154,-82,-136,99,-114,99,99,-137,99,-109,-81,154,99,-88,99,-138,154,-98,154,154,-113,99,-103,-115,-95,-89,154,-94,-100,-104,99,-97,-90,154,-92,-101,-102,-93,-91,-96,]),'RETURN':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[247,247,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'EQ':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,151,-141,-110,151,151,151,-106,-134,-131,151,-142,151,-112,-135,151,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,151,151,-136,-114,-137,-109,151,-138,151,151,151,-113,-103,-115,151,-104,151,]),'STRUCT':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[23,23,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,23,-18,-16,-81,-20,23,-19,-21,-13,-8,-12,-15,-9,-11,]),'CHECK_STOP_SLOTS':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[257,257,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'STATE_DECL':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[24,24,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,24,-18,-16,-81,-20,24,-19,-21,-13,-8,-12,-15,-9,-11,]),'CHECK_ALLOCATE':([181,252,253,258,297,306,328,349,355,363,366,378,379,381,382,383,385,388,389,],[250,250,-99,-82,-81,-88,-98,-95,-89,-94,-100,-97,-90,-92,-101,-102,-93,-91,-96,]),'LIT_BOOL':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,190,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,263,103,103,-99,-82,103,103,103,103,-81,103,-88,103,-98,103,-95,-89,-94,-100,103,-97,-90,-92,-101,-102,-93,-91,-96,]),'IS_VALID':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-99,-82,86,86,86,86,-81,86,-88,86,-98,86,-95,-89,-94,-100,86,-97,-90,-92,-101,-102,-93,-91,-96,]),'NOT':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,253,258,267,269,270,272,297,305,306,307,328,338,349,355,363,366,373,378,379,381,382,383,385,388,389,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-99,-82,104,104,104,104,-81,104,-88,104,-98,104,-95,-89,-94,-100,104,-97,-90,-92,-101,-102,-93,-91,-96,]),'{':([5,30,46,52,69,74,76,77,78,117,123,124,128,150,162,164,166,169,171,172,176,182,183,184,185,189,221,222,225,226,227,229,241,281,282,295,326,345,354,372,375,377,386,],[-70,48,-65,-74,48,-30,-80,-73,-76,174,-64,181,-2,-32,-31,-2,224,-2,231,232,48,-78,-77,-79,-75,181,-33,181,-2,-2,283,-23,48,318,-22,48,48,181,181,181,181,181,181,]),'}':([1,2,5,8,12,13,15,27,46,48,56,63,70,71,72,74,120,121,122,123,150,162,174,178,179,180,181,221,224,230,231,232,234,235,236,237,238,239,241,246,252,253,258,259,260,265,274,275,276,278,279,280,283,285,287,288,289,291,292,294,297,303,306,316,317,318,319,320,322,323,326,328,341,342,343,346,347,349,355,358,360,363,366,369,378,379,381,382,383,385,388,389,],[-2,-29,-70,-34,-5,-3,-39,-4,-65,-2,-6,-7,-2,123,-69,-30,-2,-68,-2,-64,-32,-31,-2,-66,-67,-10,258,-33,-2,-17,-2,-2,-26,291,-2,-25,-27,-28,-14,297,-84,-99,-82,-41,-36,-38,-40,-35,-37,316,-2,-43,-2,320,322,-2,-46,-18,-24,-16,-81,-83,-88,-20,-42,-2,343,-19,-21,-45,-13,-98,-44,358,-8,-12,-15,-95,-89,-9,-11,-94,-100,-47,-97,-90,-92,-101,-102,-93,-91,-96,]),'OR':([5,20,22,62,84,85,88,94,95,97,98,100,101,102,103,134,137,138,140,142,144,161,163,167,199,201,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,266,268,271,273,298,312,313,334,335,337,339,340,357,368,380,],[-70,-62,-61,-60,-140,-139,-116,-108,-105,-138,-107,-111,-143,160,-141,-110,160,160,160,-106,-134,-131,160,-142,160,-112,-135,-127,-130,-117,-126,-125,-123,-124,-120,-121,-122,-119,-118,-129,-128,160,-136,-114,-137,-109,160,-138,160,160,160,-113,-103,-115,160,-104,160,]),'IN_PORT':([0,1,2,5,8,15,46,56,63,74,123,150,162,180,221,230,241,258,259,260,265,274,275,276,283,291,294,297,316,318,320,322,326,343,346,347,358,360,],[26,26,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-82,-41,-36,-38,-40,-35,-37,26,-18,-16,-81,-20,26,-19,-21,-13,-8,-12,-15,-9,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,283,318,],[1,1,1,1,]),'obj_decl':([0,1,169,174,225,226,231,236,283,318,],[2,2,226,234,226,226,234,234,2,2,]),'statements':([124,189,222,345,354,372,375,377,386,],[180,259,274,360,366,379,382,385,388,]),'type_enums':([224,279,],[278,317,]),'pairsx':([51,126,],[77,185,]),'type_members':([174,231,236,],[235,285,292,]),'ident_or_star':([177,],[244,]),'statements_inner':([181,252,],[246,303,]),'param':([53,57,127,],[79,79,79,]),'file':([0,],[7,]),'type_state':([232,288,],[288,288,]),'type_member':([174,231,236,],[236,236,236,]),'aexpr':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,267,269,270,272,305,307,338,373,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'enumeration':([37,54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,267,269,270,272,305,307,321,338,373,],[60,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,344,94,94,]),'literal':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,267,269,270,272,305,307,338,373,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'params':([53,57,127,],[80,107,186,]),'statement':([181,252,],[252,252,]),'var':([54,89,90,92,99,104,106,133,135,141,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,175,181,233,247,252,267,269,270,272,296,300,301,302,304,305,307,308,338,350,353,373,],[95,95,95,95,95,95,95,197,95,204,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,240,95,290,95,95,95,95,95,95,327,330,331,332,333,95,95,336,95,362,365,95,]),'if_statement':([181,252,375,],[253,253,383,]),'type':([0,1,28,36,38,41,42,53,54,57,68,87,89,90,92,99,104,106,116,127,131,135,139,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,169,174,181,225,226,231,236,247,252,267,269,270,272,283,305,307,318,338,348,352,373,],[11,11,44,58,61,64,65,82,96,82,118,134,96,96,96,96,96,96,173,187,193,96,202,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,228,11,96,228,228,11,11,96,96,96,96,96,96,11,96,96,11,96,361,364,96,]),'empty':([0,1,32,44,48,49,53,55,57,58,60,61,64,65,70,120,122,127,128,131,132,135,145,164,165,169,174,224,225,226,231,232,236,240,267,269,272,277,279,283,284,288,290,318,344,361,],[12,12,52,52,72,52,81,52,81,52,52,52,52,52,72,72,72,188,52,194,52,198,198,52,52,229,237,280,229,229,237,289,237,52,198,198,198,52,280,12,52,289,52,12,52,52,]),'declsx':([0,1,283,318,],[13,27,13,13,]),'func_decl':([0,1,174,231,236,283,318,],[8,8,238,238,238,8,8,]),'func_def':([0,1,174,231,236,283,318,],[15,15,239,239,239,15,15,]),'idents':([30,69,176,241,295,326,],[47,119,241,294,326,347,]),'void':([0,1,174,231,236,283,318,],[16,16,16,16,16,16,16,]),'identx':([48,70,120,122,],[71,121,178,179,]),'type_states':([232,288,],[287,323,]),'pair':([51,126,],[78,78,]),'type_enum':([224,279,],[279,279,]),'typestr':([0,1,28,36,38,41,42,53,54,57,68,87,89,90,92,99,104,106,116,127,131,135,139,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,169,174,181,225,226,231,236,247,252,267,269,270,272,283,305,307,318,338,348,352,373,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'types':([53,57,131,],[83,108,192,]),'pairs':([32,44,49,55,58,60,61,64,65,128,132,164,165,240,277,284,290,344,361,],[50,67,73,105,109,111,113,114,115,189,195,222,223,293,315,50,324,359,370,]),'ident':([0,1,11,16,28,29,30,31,33,36,37,38,39,41,42,43,48,51,53,54,57,68,69,70,82,87,89,90,92,96,99,104,106,110,116,120,122,125,126,127,130,131,133,135,136,139,141,143,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,169,174,175,176,177,181,187,224,225,226,228,231,232,233,236,241,247,252,267,269,270,272,279,283,288,295,296,300,301,302,304,305,307,308,318,321,326,338,348,350,352,353,373,],[22,22,32,35,22,45,46,49,55,22,59,22,62,22,22,66,70,75,22,101,22,22,46,70,129,22,101,101,101,142,101,101,101,167,22,70,70,182,75,22,191,22,196,101,201,22,196,205,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,22,22,196,46,242,101,129,277,22,22,284,22,286,196,22,46,101,101,101,101,101,101,277,22,286,46,196,196,196,196,196,101,101,196,22,59,46,101,22,196,22,196,101,]),'obj_decls':([169,225,226,],[227,281,282,]),'expr':([54,89,90,92,99,104,106,135,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,181,247,252,267,269,270,272,305,307,338,373,],[102,137,138,140,144,161,163,199,199,207,208,209,210,211,212,213,214,215,216,217,218,219,220,256,298,256,199,199,313,199,334,335,357,380,]),'exprs':([135,145,267,269,272,],[200,206,310,311,314,]),'decls':([0,283,318,],[25,319,342,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',219),
  ('empty -> <empty>','empty',0,'p_empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',223),
  ('decls -> declsx','decls',1,'p_decls','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',226),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',230),
  ('declsx -> empty','declsx',1,'p_declsx__none','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',240),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',244),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',253),
  ('decl -> MACHINE ( enumeration ) : obj_decls { decls }','decl',9,'p_decl__machine0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',262),
  ('decl -> MACHINE ( enumeration pairs ) : obj_decls { decls }','decl',10,'p_decl__machine1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',266),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',270),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',274),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',278),
  ('decl -> TRANS ( idents , idents , ident_or_star ) idents','decl',9,'p_decl__trans0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',282),
  ('decl -> TRANS ( idents , idents ) idents','decl',7,'p_decl__trans1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',286),
  ('decl -> TRANS ( idents , idents , ident_or_star ) idents idents','decl',10,'p_decl__trans2','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',290),
  ('decl -> TRANS ( idents , idents ) idents idents','decl',8,'p_decl__trans3','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',294),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',298),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',303),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',308),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',312),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',317),
  ('obj_decls -> obj_decl obj_decls','obj_decls',2,'p_obj_decls__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',324),
  ('obj_decls -> empty','obj_decls',1,'p_obj_decls__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',328),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',332),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',336),
  ('type_member -> obj_decl','type_member',1,'p_type_member__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',340),
  ('type_member -> func_decl','type_member',1,'p_type_member__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',341),
  ('type_member -> func_def','type_member',1,'p_type_member__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',342),
  ('decl -> obj_decl','decl',1,'p_decl__obj_decl','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',347),
  ('obj_decl -> type ident pairs SEMI','obj_decl',4,'p_obj_decl__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',351),
  ('obj_decl -> type STAR ident pairs SEMI','obj_decl',5,'p_obj_decl__1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',355),
  ('obj_decl -> type ident ASSIGN expr SEMI','obj_decl',5,'p_obj_decl__2','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',359),
  ('obj_decl -> type STAR ident ASSIGN expr SEMI','obj_decl',6,'p_obj_decl__3','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',364),
  ('decl -> func_decl','decl',1,'p_decl__func_decl','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',370),
  ('func_decl -> void ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',374),
  ('func_decl -> type ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',375),
  ('func_decl -> void ident ( types ) pairs SEMI','func_decl',7,'p_func_decl__1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',379),
  ('func_decl -> type ident ( types ) pairs SEMI','func_decl',7,'p_func_decl__1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',380),
  ('decl -> func_def','decl',1,'p_decl__func_def','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',384),
  ('func_def -> void ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',388),
  ('func_def -> type ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',389),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',394),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',398),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',402),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',407),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',411),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',415),
  ('params -> param , params','params',3,'p_params__many','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',420),
  ('params -> param','params',1,'p_params__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',424),
  ('params -> empty','params',1,'p_params__none','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',428),
  ('param -> type ident','param',2,'p_param','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',432),
  ('param -> type STAR ident','param',3,'p_param__pointer','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',436),
  ('param -> type STAR ident ASSIGN STRING','param',5,'p_param__pointer_default','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',440),
  ('param -> type ident ASSIGN NUMBER','param',4,'p_param__default_number','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',444),
  ('param -> type ident ASSIGN LIT_BOOL','param',4,'p_param__default_bool','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',448),
  ('param -> type ident ASSIGN STRING','param',4,'p_param__default_string','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',452),
  ('types -> type , types','types',3,'p_types__multiple','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',457),
  ('types -> type','types',1,'p_types__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',461),
  ('types -> empty','types',1,'p_types__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',465),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',469),
  ('typestr -> ident','typestr',1,'p_typestr__single','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',473),
  ('type -> typestr','type',1,'p_type__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',477),
  ('void -> VOID','void',1,'p_void','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',481),
  ('idents -> { identx }','idents',3,'p_idents__braced','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',486),
  ('idents -> ident','idents',1,'p_idents__bare','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',490),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',494),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',495),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',499),
  ('identx -> empty','identx',1,'p_identx__single','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',503),
  ('ident -> IDENT','ident',1,'p_ident','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',507),
  ('ident_or_star -> ident','ident_or_star',1,'p_ident_or_star','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',511),
  ('ident_or_star -> STAR','ident_or_star',1,'p_ident_or_star','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',512),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',517),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',521),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',525),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',530),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',535),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',536),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',537),
  ('pair -> STRING','pair',1,'p_pair__literal','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',541),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',546),
  ('statements -> { }','statements',2,'p_statements__none','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',550),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',554),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',558),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',562),
  ('exprs -> expr','exprs',1,'p_exprs__one','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',566),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',570),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',574),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',578),
  ('statement -> ENQUEUE ( var , type ) statements','statement',7,'p_statement__enqueue','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',582),
  ('statement -> ENQUEUE ( var , type , expr ) statements','statement',9,'p_statement__enqueue_latency','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',586),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',590),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',594),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',598),
  ('statement -> CHECK_NEXT_CYCLE ( ) SEMI','statement',4,'p_statement__check_next_cycle','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',602),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',606),
  ('statement -> CHECK_PROBE ( var , var ) SEMI','statement',7,'p_statement__check_probe','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',610),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',614),
  ('statement -> if_statement','statement',1,'p_statement__if','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',618),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',622),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',626),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',630),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_expr__static_cast','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',635),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_expr__static_cast_ptr','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',639),
  ('aexpr -> var','aexpr',1,'p_expr__var','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',643),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',647),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',651),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',655),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',659),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',663),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',667),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',671),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',675),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',680),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',685),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',690),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',694),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',695),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',696),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',697),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',698),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',699),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',700),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',701),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',702),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',703),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',704),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',705),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',706),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',707),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',712),
  ('expr -> INCR expr','expr',2,'p_expr__unary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',713),
  ('expr -> DECR expr','expr',2,'p_expr__unary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',714),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',715),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',719),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',723),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',727),
  ('literal -> STRING','literal',1,'p_literal__string','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',731),
  ('literal -> NUMBER','literal',1,'p_literal__number','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',735),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',739),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',743),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',747),
  ('var -> ident','var',1,'p_var','/home/beileijianghope/source/gem5-SALAM/src/mem/slicc/parser.py',751),
]
